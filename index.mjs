// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.1.0-esm/index.mjs";import{isPrimitive as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import{isPrimitive as a}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";function m(e,t){return o(t)?(l(t,"thisArg")&&(e.thisArg=t.thisArg),l(t,"series")&&(e.series=t.series,!a(e.series))?new TypeError(r("invalid option. `%s` option must be a boolean. Option: `%s`.","series",e.series)):l(t,"limit")&&(e.limit=t.limit,!n(e.limit))?new TypeError(r("invalid option. `%s` option must be a positive integer. Option: `%s`.","limit",e.limit)):null):new TypeError(r("invalid argument. Options argument must be an object. Value: `%s`.",t))}function u(e){if(e.__esModule)return e;var t=e.default;if("function"==typeof t){var i=function e(){if(this instanceof e){var i=[null];i.push.apply(i,arguments);var n=Function.bind.apply(t,i);return new n}return t.apply(this,arguments)};i.prototype=t.prototype}else i={};return Object.defineProperty(i,"__esModule",{value:!0}),Object.keys(e).forEach((function(t){var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(i,t,n.get?n:{enumerable:!0,get:function(){return e[t]}})})),i}var d=u(Object.freeze({__proto__:null,default:()=>()=>{}}))("some-by-async:limit");function c(e,t,i,n,r){var s,o,l,a,m,u,c,p;if(m=e.length,d("Collection length: %d",m),0===m)return d("Finished processing a collection."),r(null,!1);for(a=m<i.limit?m:i.limit,d("Concurrency limit: %d",a),d("Number of arguments: %d",n.length),s=m-1,o=0,u=-1,c=0,p=0;p<a;p++)u<s&&f();function f(){d("Collection element %d: %s.",u+=1,JSON.stringify(e[u])),2===n.length?n.call(i.thisArg,e[u],g):3===n.length?n.call(i.thisArg,e[u],u,g):n.call(i.thisArg,e[u],u,e,g)}function g(e,i){if(!l)return e?(l=!0,d("Encountered an error: %s",e.message),r(e)):(d("Processed %d of %d collection elements.",o+=1,m),d("Test result: %s",!!i),i&&!l&&(c+=1)===t?(l=!0,d("Finished processing a collection."),r(null,!0)):u<s?f():o===m?(d("Finished processing a collection."),r(null,!1)):void 0)}}function p(e,o){var l,a,u;if(l={},arguments.length>1){if(a=m(l,e))throw a;u=o}else u=e;if(!t(u))throw new TypeError(r("invalid argument. Last argument must be a function. Value: `%s`.",u));return l.series?l.limit=1:l.limit||(l.limit=s),d;function d(e,s,o){if(!i(e))throw new TypeError(r("invalid argument. First argument must be a collection. Value: `%s`.",e));if(!n(s))throw new TypeError(r("invalid argument. Second argument must be a positive integer. Value: `%s`.",s));if(!t(o))throw new TypeError(r("invalid argument. Last argument must be a function. Value: `%s`.",o));return c(e,s,l,u,(function(e,t){if(e)return o(e,!1);o(null,t)}))}}function f(e,t,i,n,r){if(arguments.length<5)return p(i)(e,t,n);p(i,n)(e,t,r)}e(f,"factory",p);export{f as default,p as factory};
//# sourceMappingURL=index.mjs.map
